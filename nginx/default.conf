# Nginx 서버 블록 정의
# http(80번 포트)로 들어오는 모든 요청을 https(443번 포트)로 리디렉션
server {
  listen 80;
  server_name lottohelper.kr www.lottohelper.kr;

  #Let's Encrypt 인증서 갱신을 위한 경로
  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}
#https(443번 포트) 서버 블록
server {
  listen 443 ssl;
  server_name lottohelper.kr www.lottohelper.kr;

  #SSL 인증서 파일 경로 지정
  ssl_certificate /etc/letsencrypt/live/lottohelper.kr/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/lottohelper.kr/privkey.pem;

  # 루트 경로("/")로 요청이 오면
  location / {
    # 정적 파일을 제공할 기본 디렉토리를 설정
    root /usr/share/nginx/html;
    index index.html index.htm;
    # URL에 해당하는 파일이 없을 경우, index.html을 반환(Vue Router가 작동하기 위해 필수)
    try_files $uri $uri/ /index.html;
  }

  # "/api"로 시작하는 모든 경로의 요청이 왔을 경우
  location /api {
    # 이 요청을 아래 주소로 전달
    # 'http://backend:8080'은 Docker Compose가 찾아주는 백엔드 서비스의 주소
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-Ip $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # "/login"로 시작하는 모든 경로의 요청이 왔을 경우
  location /login {
    # 이 요청을 아래 주소로 전달
    # 'http://backend:8080'은 Docker Compose가 찾아주는 백엔드 서비스의 주소
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-Ip $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # "/oauth2"로 시작하는 모든 경로의 요청이 왔을 경우
  location /oauth2 {
    # 이 요청을 아래 주소로 전달
    # 'http://backend:8080'은 Docker Compose가 찾아주는 백엔드 서비스의 주소
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-Ip $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # "/ws"로 시작하는 모든 경로의 요청이 왔을 경우(웹소켓 연결 요청)
  location /ws {
    proxy_pass http://backend:8080;
    # 웹소켓 연결을 위한 필수 헤더 설정
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "Upgrade";
    proxy_set_header Host $host;
  }
}